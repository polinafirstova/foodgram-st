services:
  db:
    container_name: foodgram-db
    image: postgres:14
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - ../backend/.env
    networks:
      - backend

  backend:
    container_name: foodgram-back
    image: polinafirstova/foodgram-backend:latest
    # build:
    #   context: ..
    #   dockerfile: backend/Dockerfile
    depends_on:
      - db
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    env_file:
      - ../backend/.env
    networks:
      - backend
      - frontend

  frontend:
    container_name: foodgram-front
    image: polinafirstova/foodgram-frontend:latest
    # build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend
    networks:
      - frontend

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/var/html/static/
      - media_volume:/var/html/media/
    depends_on:
      - frontend
    networks:
      - frontend
    restart: always

networks:
  backend:
  frontend:


volumes:
  pgdata:
  static_volume:
  media_volume:
  build_volume:
